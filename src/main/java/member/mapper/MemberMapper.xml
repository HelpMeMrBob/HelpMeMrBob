<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member.model.MemberDAOImpl">
	<!-- 회원 가입 (favMenu 추가 예정) -->
	<insert id="registerAction" parameterType="member.model.MemberVO">
		INSERT INTO member (id, name, pass, email, telNum)
			VALUES ( #{ id }, #{ name }, #{ pass }, #{ email }, #{ telNum } )
	</insert>

	<!-- 로그인 -->
	<select id="login" resultType="member.model.MemberVO">
		SELECT * FROM member WHERE id = #{ 0 } AND pass = #{ 1 }
	</select>
	
	<update id="myLevel" parameterType="member.model.MemberVO">
		UPDATE member SET lev = TRUNC(${ exp }/1000) WHERE id = #{ id }
	</update>
	
	<!-- 카카오 로그인 등록 -->
	<insert id="kakaoRegisterAction" parameterType="member.model.MemberVO">
		INSERT INTO member (id, name, email)
			VALUES ( #{ id }, #{ name }, #{ email } )
	</insert>
	
	<!-- 카카오 로그인 -->
	<select id="kakaoLogin" resultType="member.model.MemberVO">
		SELECT * FROM member WHERE id = #{ 0 } AND name = #{ 1 } AND email = #{ 2 }
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" resultType="member.model.MemberVO">
		SELECT * FROM member WHERE name = #{ 0 } AND email = #{ 1 }
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findPassword" resultType="member.model.MemberVO">
		SELECT * FROM member WHERE id = #{ 0 } AND email = #{ 1 }
	</select>
		
	<!-- 회원 정보 수정 -->
	<update id="memberUpdateAction" parameterType="member.model.MemberVO">
		UPDATE member SET email = #{ email }, telNum = #{ telNum } where id = #{ id } 
	</update>
	
	<!-- 대분류 취향 -->
	<select id="myPreference" resultType="member.model.MemberVO"
			parameterType="member.model.ParameterDTO">
		SELECT * FROM preference WHERE id = #{ id }
	</select>
	
	<!-- 나의 음식 목록 출력 -->
	<select id="myFoodList" resultType="member.model.MemberVO"
			parameterType="member.model.ParameterDTO">
		SELECT * FROM myfood WHERE id = #{ id } AND tab = #{ tab }
	</select>
	
	<!-- 나의 음식 목록 갯수 -->
	<select id="countMyFood" resultType="int" parameterType="member.model.ParameterDTO">
		SELECT COUNT(*) FROM myfood WHERE id = #{ id } AND tab = #{ tab }
	</select>
	
	<!-- 음식 데이터 삭제 -->
	<select id="deleteMyFood" parameterType="member.model.ParameterDTO">
		DELETE FROM myfood WHERE ID = #{ id } AND myfood = #{ myfood } AND tab = #{ tab }
	</select>
	
	<!-- 음식 데이터 삽입 -->
	<select id="insertMyFood" parameterType="member.model.ParameterDTO">
		INSERT INTO myfood (id, tab, myfood) VALUES ( #{ id }, ${ tab }, #{ myfood } )
	</select>
	
	<!-- 음식 데이터 출력 -->
	<select id="foodList" resultType="member.model.MemberVO">
		SELECT * FROM food
	</select>
	
	<!-- 회원 정보 수정 (대분류 수정) -->
	<update id="myPreferenceUpdate" parameterType="member.model.MemberVO">
		UPDATE preference SET
			prenoodle = ${ prenoodle },
			prerice = ${ prerice },
			presoup = ${ presoup },
			premeat = ${ premeat },
			preseafood = ${ preseafood },
			preetc = ${ preetc }
		WHERE id = #{ id }	
	</update>
	
	<!-- 나의 스티커 목록 -->
	<select id="mySticker" resultType="member.model.MemberVO"
			parameterType="member.model.ParameterDTO">
		SELECT * FROM haveItem WHERE id = #{ id }
	</select>
	
	<!-- 나의 포인트 -->
	<select id="myPoint" resultType="member.model.MemberVO"
			parameterType="member.model.ParameterDTO">
		SELECT * FROM point WHERE id = #{ id }
	</select>
	
	<!-- 나의 작성 목록 -->
	<select id="getTotalCountSearch" resultType="int" parameterType="member.model.ParameterDTO">
		SELECT COUNT(*) FROM board WHERE id = #{ id }  
		<if test="searchTxt != null and !searchTxt.equals('')">
			AND ${ searchField } like '%'||#{ searchTxt }||'%'
		</if>
	</select>
	
	<select id="listPageSearch" resultType="member.model.MemberVO"
			parameterType="member.model.ParameterDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM board WHERE id = #{ id }
				<if test="searchTxt != null and !searchTxt.equals('')">
					AND ${ searchField } LIKE '%'||#{ searchTxt }||'%'
				</if>
				ORDER BY idx DESC
			) Tb
		)
		WHERE rNUM <![CDATA[>=]]> #{ start } AND  rNUM <![CDATA[<=]]> #{ end }
	</select>
	
	<!-- 나의 댓글 목록 -->
	<select id="getCommentTotalCountSearch" resultType="int"
			parameterType="member.model.ParameterDTO">
		SELECT COUNT(*) FROM board_rep WHERE id = #{ id }
		<if test="searchTxt != null and !searchTxt.equals('')">
			AND ${ searchField } like '%'||#{ searchTxt }||'%'
		</if>
	</select>
	
	<select id="commentListPageSearch" resultType="member.model.MemberVO"
		parameterType="member.model.ParameterDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM board_rep WHERE id = #{ id }
				<if test="searchTxt != null and !searchTxt.equals('')">
					AND ${ searchField } LIKE '%'||#{ searchTxt }||'%'
				</if>
				ORDER BY idx DESC
			) Tb
		)
		WHERE rNUM <![CDATA[>=]]> #{ start } AND  rNUM <![CDATA[<=]]> #{ end }
	</select>
	
	<!-- 나의 스크랩 목록 -->
	<select id="getScrapTotalCountSearch" resultType="int"
			parameterType="member.model.ParameterDTO">
		SELECT COUNT(*) FROM dolike WHERE id = #{ id } AND scrapno = 1
		<if test="searchTxt != null and !searchTxt.equals('')">
			AND ${ searchField } like '%'||#{ searchTxt }||'%'
		</if>
	</select>
	
	<select id="scrapListPageSearch" resultType="member.model.MemberVO"
			parameterType="member.model.ParameterDTO">
		SELECT * FROM board INNER JOIN dolike
    		ON board.idx = dolike.idx
    		WHERE dolike.id = #{ id } AND dolike.scrapno = 1
	</select>
	
	<!-- 고객센터 내용 저장 -->
	<insert id="customerServiceSave" parameterType="member.model.ParameterDTO">
		INSERT INTO QnA (name, email, contents) VALUES ( #{ name }, #{ email }, #{ contents } )
	</insert>
</mapper>

